<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jolokia="http://www.jolokia.org/jolokia-spring/schema/config"
	xsi:schemaLocation="
  http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/util
  http://www.springframework.org/schema/util/spring-util.xsd
  http://www.jolokia.org/jolokia-spring/schema/config 
  http://www.jolokia.org/jolokia-spring/schema/config/jolokia-config.xsd">


	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- JMX -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"> 
		<property name="locateExistingServerIfPossible" value="true" /> </bean> -->
	<!-- regist MBean -->
	<!-- <bean id="exporter" class="org.springframework.jmx.export.annotation.AnnotationMBeanExporter" 
		lazy-init="false"> <property name="defaultDomain" value="net.camel" /> <property 
		name="server" ref="mbeanServer" /> </bean> -->

	<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Servlet Container(Jetty) 설정 -->
	<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- <bean id="contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"> 
		<property name="handlers"> <list> <bean class="org.eclipse.jetty.webapp.WebAppContext"> 
		<property name="contextPath" value="/" /> <property name="Descriptor" value="${camel.home}/WEB-INF/web.xml" 
		/> <property name="ParentLoaderPriority" value="true" /> <property name="ResourceBase" 
		value="${camel.home}/webapps" /> </bean> </list> </property> </bean> <bean 
		id="server" name="Main" class="org.eclipse.jetty.server.Server" init-method="start" 
		destroy-method="stop"> <constructor-arg> <bean id="threadPool" class="org.eclipse.jetty.util.thread.QueuedThreadPool"> 
		<property name="minThreads" value="10"/> <property name="maxThreads" value="50"/> 
		</bean> </constructor-arg> <property name="connectors"> <list> <bean id="connector" 
		class="org.eclipse.jetty.server.ServerConnector"> <constructor-arg ref="server"/> 
		<property name="port" value="8080"/> </bean> </list> </property> <property 
		name="handler"> <bean id="handlers" class="org.eclipse.jetty.server.handler.HandlerCollection"> 
		<property name="handlers"> <list> <ref bean="contexts"/> <bean id="defaultHandler" 
		class="org.eclipse.jetty.server.handler.DefaultHandler"/> </list> </property> 
		</bean> </property> <property name="beans"> <list> <bean id="deploymentManager" 
		class="org.eclipse.jetty.deploy.DeploymentManager"> <property name="contexts" 
		ref="contexts"/> <property name="appProviders"> <list> <bean id="webAppProvider" 
		class="org.eclipse.jetty.deploy.providers.WebAppProvider"> <property name="monitoredDirName" 
		value="webapps"/> <property name="scanInterval" value="1"/> <property name="extractWars" 
		value="true"/> </bean> </list> </property> </bean> </list> </property> </bean> -->



	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- JMX -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"> 
		<property name="locateExistingServerIfPossible" value="true" /> </bean> -->
	<!-- regist MBean -->
	<!-- <bean id="exporter" class="org.springframework.jmx.export.annotation.AnnotationMBeanExporter" 
		lazy-init="false"> <property name="defaultDomain" value="net.camel" /> <property 
		name="server" ref="mbeanServer" /> </bean> -->
	<!-- <bean id="test" class="net.camel.launcher.Test"> </bean> -->
	<!-- <bean id="child" class="net.camel.launcher.processor.DummyProcessor" 
		/> -->

<context:mbean-export server="jolokiaServer"/>
  <jolokia:mbean-server id="jolokiaServer"/>
<!-- 
<bean name="server" id="jolokia" class="org.jolokia.jvmagent.spring.SpringJolokiaAgent">
    <property name="lookupConfig" value="false"/>
    <property name="systemPropertiesMode" value="never"/>
    <property name="config">
      <bean class="org.jolokia.jvmagent.spring.SpringJolokiaConfigHolder">
        <property name="config">
          <util:map>
            <entry key="autoStart" value="true"/>
            <entry key="host" value="0.0.0.0"/>
            <entry key="port" value="15555"/>
          </util:map>
        </property>
      </bean>
    </property>
  </bean>
  -->

	<import resource="file:${camel.path.conf}/camel-core.xml" />
	<import resource="file:${camel.path.conf}/customer-beans.xml" />

</beans>